import java.util.ArrayList;
import java.util.Arrays;



public class J3L1 {
    public static void main(String[] args) {
        Integer[] list = {1,2,3,4,5,6};
        String[] list1 = {"Дом", "Здание", "Сооружение "};

        swap(list1, 0,2);
        swap(list,2,4);

        System.out.println(Arrays.toString(list));
        System.out.println(Arrays.toString(list1));

        toArray(list);
        toArray(list1);

        Box<Apple> appleBox = new Box<>();
        Box<Orange> orangeBox = new Box<>();

    }

    private static void swap(Object[] list, int i, int j){  // 1 задание.
        Object a;
        a = list[i];
        list[i] = list[j];
        list[j] = a;
    }

    private static ArrayList<?> toArray(Object[] list){  // 2 задание.
        ArrayList<?> resultlist = new ArrayList<>(Arrays.asList(list));

        return resultlist;

    }


}


/*
1. Написать метод, который меняет два элемента массива местами.(массив может быть любого ссылочного типа);+
2. Написать метод, который преобразует массив в ArrayList;+
3. Большая задача:
a. Есть классы Fruit -> Apple, Orange;(больше фруктов не надо)
b. Класс Box в который можно складывать фрукты, коробки условно сортируются по типу фрукта, поэтому в одну коробку нельзя сложить и яблоки, и апельсины;
c. Для хранения фруктов внутри коробки можете использовать ArrayList;
d. Сделать метод getWeight() который высчитывает вес коробки, зная количество фруктов и вес одного фрукта(вес яблока - 1.0f, апельсина - 1.5f, не важно в каких это единицах);
e. Внутри класса коробка сделать метод compare, который позволяет сравнить текущую коробку с той, которую подадут в compare в качестве параметра, true - если их веса равны, false в противном случае(коробки с яблоками мы можем сравнивать с коробками с апельсинами);
f. Написать метод, который позволяет пересыпать фрукты из текущей коробки в другую коробку(помним про сортировку фруктов, нельзя яблоки высыпать в коробку с апельсинами), соответственно в текущей коробке фруктов не остается, а в другую перекидываются объекты, которые были в этой коробке;
g. Не забываем про метод добавления фрукта в коробку.
*/